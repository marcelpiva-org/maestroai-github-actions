name: 'Build Docker Container'
description: 'Build multi-architecture Docker containers with caching'
inputs:
  registry:
    description: 'Container registry'
    required: false
    default: 'ghcr.io'
  image_name:
    description: 'Container image name'
    required: true
  tag:
    description: 'Container tag'
    required: true
  architecture:
    description: 'Target architecture (amd64, arm64)'
    required: true
  context:
    description: 'Build context'
    required: false
    default: '.'
  dockerfile:
    description: 'Dockerfile path'
    required: false
    default: 'Dockerfile'
  github_token:
    description: 'GitHub token for registry login'
    required: true
  packages_token:
    description: 'Packages token for private NuGet'
    required: false
  registry_username:
    description: 'Registry username (defaults to github.actor)'
    required: false
outputs:
  image:
    description: 'Built image reference'
    value: ${{ inputs.registry }}/${{ inputs.image_name }}:${{ inputs.tag }}-${{ inputs.architecture }}
runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
        install: true

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username || github.actor }}
        password: ${{ inputs.github_token }}

    - name: Build and push container
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: linux/${{ inputs.architecture }}
        push: true
        tags: ${{ inputs.registry }}/${{ inputs.image_name }}:${{ inputs.tag }}-${{ inputs.architecture }}
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          GITHUB_TOKEN=${{ inputs.packages_token }}
        labels: |
          org.opencontainers.image.title=${{ inputs.image_name }} (${{ inputs.architecture }})
          org.opencontainers.image.description=MaestroAI microservice container
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ inputs.tag }}
        cache-from: |
          type=gha,scope=buildkit-${{ inputs.architecture }}-${{ github.ref_name }}
          type=registry,ref=${{ inputs.registry }}/${{ inputs.image_name }}:buildcache-${{ inputs.architecture }}
        cache-to: |
          type=gha,mode=max,scope=buildkit-${{ inputs.architecture }}-${{ github.ref_name }}
          type=registry,ref=${{ inputs.registry }}/${{ inputs.image_name }}:buildcache-${{ inputs.architecture }},mode=max